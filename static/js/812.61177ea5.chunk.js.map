{"version":3,"file":"static/js/812.61177ea5.chunk.js","mappings":"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","sources":["components/CardMovie/CardMovie.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/ImagePlug.jsx","pages/Cast.jsx","components/ObjectList/ObjectList.styled.jsx","components/ObjectCard/ObjectCard.styled.jsx","components/ObjectCard/ObjectCard.jsx","components/ObjectList/ObjectList.jsx","pages/MainPage/MainPage.jsx","components/hooks/useFetchMovies.jsx","pages/MainPage/MainPage.styled.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/CardMovie/CardMovie.jsx","pages/MovieDetailsPage.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/MoviesPage.jsx","pages/Reviews.jsx","services/moviesApi.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const CardMovieContainer = styled.div`\n    display: flex;\n    width: 1000px;\n    margin-bottom: 24px;\n\n`;\n \nexport const MovieImg = styled.img`\n    width: 100%;\n`;\n\nexport const MovieInfoContainer = styled.div`\n    width: 60%;\n    margin-left: 30px;\n`;\n\nexport const MovieInfoTitle = styled.h1`\n    color: #000000;\n    font-size: 50px;\n    font-weight: 500px;\n`;\n\nexport const MovieInfoTitle2 = styled.h2`\n    color: #000000;\n    font-size: 40px;\n    font-weight: 400px;\n`;\nexport const MovieInfoText = styled.p`\n    font-size: 24px;\n    font-weight: 400px;\n `;\n\nexport const MovieInfoGenres = styled.ul`\n    font-size: 24px;\n    font-weight: 400px;\n `;\n\nexport const AdditionalInfoContainer = styled.div`\n    border-top: 1px solid #2a363b;\n    width: 100%;  \n`;\n\nexport const AdditionalTitle = styled.h4`\n    color: #000000;\n    font-size: 30px;\n    font-weight: 400px;\n`;\n\nexport const AdditionalInfoList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    list-style: disc;\n    margin-bottom: 24px;\n    border-bottom: 1px solid #2a363b;\n`;\n\nexport const AdditionalInfoLink = styled(NavLink)`\n    color: #000000;\n    font-size: 24px;\n    font-weight: 400px;\n    text-decoration: none;\n    &:hover,\n    &:focus {\n        color: #2196f3;\n        text-shadow: 0 0 10px rgb(63, 131, 209);\n    }\n`;\n\nexport const CastList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    margin-left: -20px;\n    margin-top: -20px;\n`;\n\nexport const CastListItem = styled.li`\n    flex-basis: calc((100% - 100px) / 5);\n    max-width: 180px;\n    margin-left: 100px;\n    margin-top: 20px;\n`;\n\nexport const ReviewsItemTitle = styled.h4`\n    font-size: 24px;\n    font-weight: 400px;\n`;\n\nexport const ReviewsText = styled.p`\n    font-size: 30px;\n    font-weight: 400px;\n    max-width: 60%;\n`;","import styled from \"styled-components\";\n\nexport const LoaderContainer = styled.div`\n    display: flex;\n    justify-content: center;\n`","import React from 'react';\nimport { Oval } from \"react-loader-spinner\";\nimport { LoaderContainer } from \"./Loader.styled\";\n\nexport default function Loader() {\n    return (\n        <LoaderContainer>\n            <Oval color=\"#3f51b5\" height=\"100px\" width=\"100px\" />\n        </LoaderContainer>\n   )};","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst ListLi = styled.li`\n    font-size: 24px;\n    font-weight: 500px;\n    :hover, :focus{\n        text-shadow: 0 0 10px rgb(63, 131, 209);\n    }\n`\nconst ListLink = styled(NavLink)`\n    text-decoration: none;\n    &.active{\n    color: #1e0ff0;}\n`\nexport { ListLi, ListLink };","import { ListLi, ListLink } from \"./MoviesList.styled\";\nimport { useLocation} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n  \n\nexport default function MoviesList({ movies }) {\n   const location = useLocation();\n    return (  \n    <>\n      <ol>\n         {movies.map(({ id, title, name }) => (\n            <ListLi key={id} text={title ?? name}>\n               <ListLink to={`/movies/${id}`}\n                  state={{from: location}}>\n                  {title ?? name} \n               </ListLink>\n            </ListLi>\n            )\n         )}\n      </ol>\n   </>\n        )\n}\n\nMoviesList.propTypes = {\n   movies: PropTypes.arrayOf(\n      PropTypes.shape({\n         id: PropTypes.number.isRequired,\n         title: PropTypes.string,\n         name: PropTypes.string,\n      })\n   )\n}","import { FcSearch } from \"react-icons/fc\";\nimport { IconContext } from \"react-icons\";\nimport styled from \"styled-components\";\n\nconst IconContainer = styled.div`\nheight: 280px;\nwidth: 180px;\ndisplay: flex;\njustify-content: center;\nalign-items: flex-end;\nbackground-color: #ffffff;\n`\n\nconst ImagePlug = () => {\n\n    return (\n    <IconContext.Provider value={{ size: \"180px\" }}>\n     <IconContainer>\n      <FcSearch />\n     </IconContainer>\n    </IconContext.Provider>\n    )\n}\n\nexport default ImagePlug;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport toast from 'react-hot-toast';\nimport Loader from \"components/Loader/Loader\";\nimport { getMovieCast } from \"../services/moviesApi\";\nimport { CastList, CastListItem } from \"components/CardMovie/CardMovie.styled\";\nimport ImagePlug from \"components/ImagePlug\";\n\nexport function Cast() {\n    const { movieId } = useParams();\n    const [actors, setActors] = useState([]);\n    const [loading, setLoading] = useState(false);\n    \n    useEffect(() => {\n        async function fatchCast() {\n            setLoading(true);\n            try {\n                const results = await getMovieCast(movieId);\n                setActors([...results.cast] );\n            } catch (error) {\n                toast.error(\"We have no information about actors from this movie.\")\n            } finally {\n                setLoading(false);\n            }\n        }\n        fatchCast();\n        }, [movieId]);\n    \nreturn (\n    <>\n        {loading && <Loader/>}\n        {actors && (\n            <CastList>\n                {actors.map((actor) => \n                    <CastListItem key={actor.cast_id}>\n                        {actor.profile_path ? (\n                            <img src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`} alt={actor.name} />\n                            ) : ( <ImagePlug/>\n                        )}\n                        <h3>{actor.name}</h3>\n                        <p>Character: {actor.character}</p>\n                </CastListItem>\n                )}\n                </CastList>\n        )}\n    </>\n    );\n}","//import { NavLink } from \"react-router-dom\";\n//import styled from \"styled-components\";\nimport styled from '@emotion/styled';\nimport { mediaTablet, mediaDesktop } from '../../functions/media';\n\nexport const ObjContainer = styled.ul`\n    ${mediaTablet(`max-width: 768px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n\n    margin-left: -30px;\n    margin-top: -30px;\n  `)} \n\n    ${mediaDesktop(`max-width: 1280px;\n    display: flex;\n    flex-wrap: wrap;\n    margin-left: -30px;\n    margin-top: -30px;\n\n\n  `)}\n`","import { NavLink } from \"react-router-dom\";\n//import styled from \"styled-components\";\nimport styled from '@emotion/styled';\nimport { mediaTablet, mediaDesktop } from '../../functions/media';\n\n\n    \nexport const ObjItem = styled.li`\n    :not(:last-child) {\n  margin-bottom: 20px;} \n\n    ${mediaTablet(`max-width: 768px;\n      margin-bottom: 0px;\n    margin-top: 30px;\n    margin-left: 30px;\n    flex-basis: calc((100% - 60px) / 2);\n    position: relative;\n    margin-bottom: 0px;\n\n    &:not(:last-child) {\n      margin-bottom: 0px;\n    }\n  \n  `)}\n\n    ${mediaDesktop(`\n      margin-top: 30px;\n    margin-left: 30px;\n    flex-basis: calc((100% - 90px) / 3);\n    position: relative;\n\n\n  `)}\n`;    \n/////////////////////////////////\n\n///////////////////////////////////\nexport const ObjInfo = styled.div`\n  border-radius: 5px;\n  transition: transform var(--animation-duration) var(--timing-function);\n    font-size: 24px;\n    font-weight: 500px;\n    :hover, :focus{\n      transform: scale(1.05);\n      box-shadow: 0 0 20px rgba(255, 107, 8, 1);\n    }\n`\nexport const ObjLink = styled(NavLink)`\n    display: block;\n    text-decoration: none;\n    &.active{\n    color: #1e0ff0;}\n`\nexport const ObjImg = styled.img`\n  height: 398px;\n  width: 280px;\n  cursor: pointer;\n  border-radius: 5px;\n  filter: drop-shadow(1px 1px 1px rgba(55%, 55%, 55%, 0.6));\n  box-shadow: 0 0 10px rgba(55%, 55%, 55%, 0.5);\n`\nexport const ObjCardWrapper = styled.div`\n  padding: 10px;\n`\nexport const ObjCardTitle =styled.h2`\n      color: #000000;\n    font-size: 50px;\n    font-weight: 500px;\n`","import {ObjItem, ObjLink, ObjImg, ObjInfo, ObjCardWrapper, ObjCardTitle } from \"./ObjectCard.styled\";\nimport { useLocation} from \"react-router-dom\";\n\n//import PropTypes from \"prop-types\";\n\nexport default function ObjectCard({ id, title, poster_path,  name }) {\n   const location = useLocation();\n    return (  \n    <>\n           <ObjItem text={title ?? name}>\n               <ObjLink to={`/movies/${id}`}\n                  state={{ from: location }}>\n                  {title ?? name} \n                  <ObjInfo>\n                     <ObjImg src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title} width=\"50px\" langht='50px' />\n                     <ObjCardWrapper>\n                        <ObjCardTitle>Title {title}</ObjCardTitle>\n                        <div >ObjCardInfo</div>\n                     </ObjCardWrapper>\n                  </ObjInfo>\n                  </ObjLink>\n               \n            </ObjItem>\n            \n   </>\n        )\n}","import {ObjContainer  } from \"./ObjectList.styled\";\n//import { useLocation} from \"react-router-dom\";\nimport  ObjectCard  from \"../ObjectCard\";\n//import PropTypes from \"prop-types\";\n  \n\nexport default function ObjectList({ movies }) {\n   //const location = useLocation();\n    return (  \n    <>\n         \n             <ObjContainer>\n         {movies.map(({ id, title, poster_path,  name }) => (\n            <ObjectCard key={id} title={title} poster_path={poster_path} name={name} />\n            //  <ObjItem key={id} text={title ?? name}>\n            //    <ObjLink to={`/movies/${id}`}\n            //       state={{ from: location }}>\n            //       {title ?? name} \n            //       <ObjCard>\n            //          <ObjImg src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title} width=\"50px\" langht='50px' />\n            //          <ObjCardWrapper>\n            //             <ObjCardTitle>Title {title}</ObjCardTitle>\n            //             <div ObjCardInfo></div>\n            //          </ObjCardWrapper>\n            //       </ObjCard>\n            //       </ObjLink>\n               \n            // </ObjItem>\n            )\n                )} \n                </ObjContainer>\n      \n   </>\n        )\n}\n\n// MoviesList.propTypes = {\n//    movies: PropTypes.arrayOf(\n//       PropTypes.shape({\n//          id: PropTypes.number.isRequired,\n//          title: PropTypes.string,\n//          name: PropTypes.string,\n//       })\n//    )\n// }","import { useFetchMovies } from \"components/hooks\";\nimport Loader from \"components/Loader/Loader\";\nimport { Container } from \"components/Container\";\nimport { MainBox } from \"./MainPage.styled\";\nimport MoviesList from \"components/MoviesList\";\nimport ObjectList from \"components/ObjectList\";\n\nexport default function MainPage() {\n   // а тут его (кастомный хук useFetchMovies) использую\n   const { trendingMovies, loading } = useFetchMovies();\n   return (\n      <>\n          <MainBox>\n         <Container>\n           \n         <h1>Актуальні збори / OBJECT</h1>\n         {loading && <Loader />}\n            <MoviesList movies={trendingMovies} />\n               <ObjectList movies={trendingMovies} />\n            \n            </Container>\n            </MainBox>\n      </>\n   )\n}","import { useEffect, useState } from \"react\"\nimport { getPopularFilms } from \"services/moviesApi\";\n\n\n//кастомный Хук\nexport const useFetchMovies = () => {\n   const [trendingMovies, setTrendingMovies] = useState([]);\n   const [loading, setLoading] = useState(false);\n\n   useEffect(() => {\n      async function fetchMovies() {\n         setLoading(true);\n         try {\n            const movies = await getPopularFilms();\n            setTrendingMovies([...movies])\n           \n         } catch (error) {\n            console.log(error);\n         } finally {\n            setLoading(false);\n         }\n      }\n      fetchMovies();\n   }, []);\n\n   return { trendingMovies, loading };\n};","import styled from '@emotion/styled';\n//import styled from 'styled-components';\n\nimport { mediaTablet, mediaDesktop } from '../../functions/media';\n\nimport poly_baner from '../../assets/images/bg-pictures/poly_banner.png'\n\n\nexport const MainBox = styled.div`\n    width: <a href=\"\"></a>;\n  ${mediaTablet(`\n  min-height: 100vh;\n  min-width: 768px;\n\n    background-image: url(${poly_baner})\n\n    background-repeat: no-repeat;\n  `)}\n\n  ${mediaDesktop(`\n  min-width: 1280px;\n\n background-image: url(${poly_baner});\n\n    background-repeat: repeat;\n  `)}\n`;   \n","import styled from \"styled-components\";\nimport { BiArrowBack } from 'react-icons/bi';\n\nexport const BtnIcon = styled(BiArrowBack)`\n  font-size: 40px;\n  height: 50px;\n  color: #000000;\n \n`;\n\nexport const BtnText = styled.span`\n\n  margin-left: 30px;\n  margin-right: 30px;\n  \n`;\n\n export const ButtonGoBack = styled.button`\n  margin-bottom: 24px;\n  padding: 4px 8px;\n  border-radius: 2px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  //display: inline-block;\n  display: flex;\n  justify-content: center;\n  color: #000000;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 40px;\n  //line-height: 24px;\n  //font-style: normal;\n  font-weight: 500;\n  min-width: 300px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  :hover,\n  :focus {\n    background-color: #abb2e4;\n  }\n`;\n","import { NavLink } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { ButtonGoBack, BtnIcon, BtnText } from \"./Button.styled\";\n\nexport default function Button() {\n  const location = useLocation();\n\n  return (\n    <NavLink style={{ textDecoration: \"none\"}} to={location?.state?.from ?? '/'}>\n      <ButtonGoBack type=\"button\" text=\"ooo\">\n        <BtnIcon />\n        <BtnText>Go back</BtnText>\n      </ButtonGoBack>\n    </NavLink>  \n  );\n}\n","import { Outlet } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n    CardMovieContainer, MovieInfoContainer,  MovieInfoGenres,\n    MovieInfoTitle, MovieInfoTitle2, MovieInfoText, MovieImg\n} from \"./CardMovie.styled\";\n\nimport {\n    AdditionalInfoLink, AdditionalInfoList,\n     AdditionalTitle, AdditionalInfoContainer\n} from \"./CardMovie.styled\";\n\nexport default function CardMovie({ movieDetails }) {\n    const location = useLocation();\n\n    return (\n        <>\n        <CardMovieContainer>\n            <MovieImg src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`} alt={movieDetails.original_title} width=\"50px\" langht='50px' />\n            <MovieInfoContainer>\n                <MovieInfoTitle>{movieDetails.original_title} ({movieDetails.release_date})</MovieInfoTitle>\n                <MovieInfoText>User Score: {movieDetails.vote_average * 10}%</MovieInfoText>\n                <MovieInfoTitle2>Overview</MovieInfoTitle2>\n                <MovieInfoText>{movieDetails.overview}</MovieInfoText>\n                <MovieInfoTitle2>Genres</MovieInfoTitle2>\n                <MovieInfoGenres>\n                    {movieDetails.genres.map(genre => (\n                        <li key={genre.id}>{genre.name}</li>))}\n                </MovieInfoGenres>\n                </MovieInfoContainer> \n        </CardMovieContainer>\n            {/* //////////////////////////////////////// */}\n        <AdditionalInfoContainer>\n            <AdditionalTitle>Additional information</AdditionalTitle>\n            <AdditionalInfoList>\n                    <li><AdditionalInfoLink to={`/movies/${movieDetails.id}/cast`}\n                        state= {{ from: location?.state?.from ?? '/' }}\n                     >   \n                    Cast</AdditionalInfoLink></li>\n                <li><AdditionalInfoLink to={`/movies/${movieDetails.id}/reviews`}\n                        state= {{ from: location?.state?.from ?? '/' }}\n                    >\n                    Reviews</AdditionalInfoLink></li>\n                </AdditionalInfoList>\n                <Suspense fallback=\"\">\n                    <Outlet />\n                </Suspense>    \n        </AdditionalInfoContainer> \n    </>\n    )    \n}\n\nCardMovie.propTypes = {\n    movieDetails: PropTypes.shape({\n        poster_path: PropTypes.string,\n        original_title: PropTypes.string,\n        overview: PropTypes.string,\n        genres: PropTypes.array,\n    })\n};\n\n","\nimport { useState, useEffect } from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport toast from 'react-hot-toast';\nimport Loader from \"components/Loader/Loader\";\n\nimport { getMovieDetails } from \"../services/moviesApi\";\n    \nimport Button from \"components/Button/Button\";\nimport CardMovie from \"components/CardMovie/CardMovie\";\n\n\nexport function MovieDetailsPage() {\n    const { movieId } = useParams();\n    const [movieDetails, setMovieDetails] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        async function fetchMovieDetails() {\n            setLoading(true);\n            try {\n                const details = await getMovieDetails(movieId);\n                setMovieDetails(details);\n            } catch (error) {\n                toast.error(\"Sorry, the selected movie was not found. Back to main page please\");\n            } finally {\n                setLoading(false)\n            }\n        } \n        fetchMovieDetails();\n    }, [movieId]);\n\n    return (\n        <main> \n            {loading && <Loader/>}\n\n            {movieDetails && (\n                <> \n                    <Button/>\n                    <CardMovie movieDetails={movieDetails} />\n                </>\n            )}\n        </main>\n    )\n}\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n    display: flex;\n    justify-content: left;\n    align-items: center;\n`;\n\nexport const SerchFormBtn = styled.button`\n    padding: 6px 22px;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.62;\n    text-align: center;\n    letter-spacing: 0.03em;\n    color: #ffffff;\n    background: #3f51b5;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n        box-shadow: 0 0 10px rgb(63, 131, 209);;\n    };\n`;\n\nexport const SerchFormInput = styled.input`\n    display: inline-block;\n    width: 600px;\n    background: #ffffff;\n    font: inherit;\n    font-size: 18px;\n    border-radius: 4px;\n    outline: none;\n    padding: 6px 22px;\n    margin-right: 10px;\n    &::placeholder {\n        font: inherit;\n        font-size: 18px;\n    }\n\n    &:hover,\n    &:focus {\n        box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\n        0px 2px 2px rgba(0, 0, 0, 0.12);\n    }\n`;","import PropTypes from \"prop-types\";\nimport { Form, SerchFormInput, SerchFormBtn } from \"./Form.styled\";\n\nexport function SearchForm({ handleSubmit }) {\n    return(\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n            <SerchFormInput type=\"text\" name=\"query\" autoFocus placeholder=\"Search movie\" />\n            <SerchFormBtn type=\"submit\">Search</SerchFormBtn>\n    </Form>\n    )    \n}\n\nSearchForm.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n}\n","import { useEffect, useState } from \"react\"\nimport { useSearchParams } from \"react-router-dom\";\nimport Notiflix from \"notiflix\";\n\nimport Loader from \"components/Loader/Loader\";\nimport { SearchForm } from \"components/Form/Form\";\n\nimport { getSerchMovies } from \"../services/moviesApi\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\n\n\nexport function MoviesPage() {\n   const [searchParams, setSearchParams] = useSearchParams();\n   const [loading, setLoading] = useState(false);\n   const [resultsMovies, setResultMovies] = useState([]);\n\n   const currentQuery = searchParams.get('query');\n   \n   useEffect(() => {\n      if (currentQuery) {\n         async function fetchSerchMovies() {\n            setLoading(true);\n            try {\n               const movies = await getSerchMovies(currentQuery);\n               if (movies.results.length === 0) {\n                  Notiflix.Notify.info('Sorry, there is no movie for this request. please enter a new request');\n                  return;\n               }\n               setResultMovies(movies.results);\n            } catch (error) {\n               console.log(error);\n            } finally {\n               setLoading(false)\n            }\n         }\n         fetchSerchMovies();\n      }\n   },[currentQuery])\n   \n   \n   function handleSubmit(event) {\n      event.preventDefault();\n      const queryString = event.currentTarget.elements.query.value;\n      if (queryString === \"\") {\n      Notiflix.Notify.info('Please, enter a request!');\n      return;\n      }\n         setSearchParams({query: queryString.trim().toLowerCase()})\n   }\n\n   return (\n      <main>\n         <SearchForm handleSubmit={handleSubmit} autoComplete=\"off\"/>\n         {loading && <Loader/>}\n         {resultsMovies && <MoviesList movies={resultsMovies} />}\n      </main>)\n}","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport Loader from \"components/Loader/Loader\";\n\nimport { getReviews } from \"../services/moviesApi\";\nimport { ReviewsItemTitle, ReviewsText} from \"components/CardMovie/CardMovie.styled\";\n\n\nexport function Reviews() {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [loading, setLoading] = useState(false);\n    \n    useEffect(() => {\n        async function fatchReviews() {\n            setLoading(true);\n            try {\n                const resReviews = await getReviews(movieId);\n                setReviews([...resReviews.results]);\n            } catch (error) {\n                console.log(error);\n            } finally {\n                setLoading(false);\n            }\n        }\n            \n        fatchReviews();\n    }, [movieId]);\n    \n    return (\n        <>\n            {loading && <Loader/>}\n            {reviews.length > 0  ? (\n                <ul>\n                {reviews.map((review) => \n                    <li key={review.id}>\n                        <ReviewsItemTitle>{review.author}</ReviewsItemTitle>\n                        <ReviewsText>{review.content}</ReviewsText>\n                </li>\n                )}\n                </ul>\n            ) :\n                <p>We don`t have any reviews for this movie.</p>}\n        </>\n    );\n}","import axios from \"axios\"\nimport Notiflix from \"notiflix\";\nNotiflix.Notify.init({\n  width: \"280\",\n  position: \"center-top\",\n  distance: \"180px\",\n  opacity: 1,\n  timeout: 3000,\n  showOnlyTheLastOne: true,\n  clickToClose: true,\n  useIcon: false,\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_Key = \"e5081468dae293b7907b87f3cbb5b6c8\";\n\nexport async function getPopularFilms() {\n    try {\n        const response = await axios.get(`trending/all/day?api_key=${API_Key}`);\n        return response.data.results;\n    }\n    catch (error) {\n        Notiflix.Notify.init(\"Critical error\", error);\n        //failure\n    }\n}\n\nexport async function getMovieDetails(movieId) {\n    try {\n        const response = await axios.get(`movie/${movieId}?api_key=${API_Key}&language=en-US`);\n        return response.data;\n    }\n    catch (error) {\n        Notiflix.Notify.init(\"Critical error\", error);\n        //failure\n    }\n}\n\n\nexport async function getMovieCast(movieId) {\n    try {\n        const response = await axios.get(`movie/${movieId}/credits?api_key=${API_Key}&language=en-US`);\n        return response.data;\n    }\n    catch (error) {\n        Notiflix.Notify.init(\"Critical error\", error);\n        //failure\n    }\n}\n\nexport async function getReviews(movieId) {\n    try {\n        const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_Key}&language=en-US`);\n        return response.data;\n    }\n    catch (error) {\n        Notiflix.Notify.init(\"Critical error\", error);\n        //failure\n    }\n}\n\nexport async function getSerchMovies(searchMovies) {\n    try {\n        const response = await axios.get(`search/movie?api_key=${API_Key}&language=en-US&query=${searchMovies}`);\n        return response.data;\n    }\n    catch (error) {\n        Notiflix.Notify.init(\"Critical error\", error);\n        //failure\n    }\n}\n"],"names":["CardMovieContainer","styled","MovieImg","MovieInfoContainer","MovieInfoTitle","MovieInfoTitle2","MovieInfoText","MovieInfoGenres","AdditionalInfoContainer","AdditionalTitle","AdditionalInfoList","AdditionalInfoLink","NavLink","CastList","CastListItem","ReviewsItemTitle","ReviewsText","LoaderContainer","Loader","color","height","width","ListLi","ListLink","MoviesList","movies","location","useLocation","map","id","title","name","text","to","state","from","IconContainer","value","size","Cast","movieId","useParams","useState","actors","setActors","loading","setLoading","useEffect","getMovieCast","results","cast","toast","fatchCast","actor","profile_path","src","alt","character","cast_id","ObjContainer","mediaTablet","mediaDesktop","ObjItem","ObjInfo","ObjLink","ObjImg","ObjCardWrapper","ObjCardTitle","ObjectCard","poster_path","langht","ObjectList","MainPage","trendingMovies","setTrendingMovies","getPopularFilms","console","log","fetchMovies","useFetchMovies","MainBox","Container","poly_baner","BtnIcon","BiArrowBack","BtnText","ButtonGoBack","Button","style","textDecoration","type","CardMovie","movieDetails","original_title","release_date","vote_average","overview","genres","genre","Suspense","fallback","MovieDetailsPage","setMovieDetails","getMovieDetails","details","fetchMovieDetails","Form","SerchFormBtn","SerchFormInput","SearchForm","handleSubmit","onSubmit","autoComplete","autoFocus","placeholder","MoviesPage","useSearchParams","searchParams","setSearchParams","resultsMovies","setResultMovies","currentQuery","get","fetchSerchMovies","getSerchMovies","length","Notiflix","event","preventDefault","queryString","currentTarget","elements","query","trim","toLowerCase","Reviews","reviews","setReviews","getReviews","resReviews","fatchReviews","review","author","content","position","distance","opacity","timeout","showOnlyTheLastOne","clickToClose","useIcon","axios","API_Key","response","data","searchMovies"],"sourceRoot":""}