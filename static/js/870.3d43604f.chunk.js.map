{"version":3,"file":"static/js/870.3d43604f.chunk.js","mappings":"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","sources":["components/CardMovie/CardMovie.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ImagePlug.jsx","pages/Cast.jsx","services/moviesApi.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const CardMovieContainer = styled.div`\n    display: flex;\n    width: 1000px;\n    margin-bottom: 24px;\n\n`;\n \nexport const MovieImg = styled.img`\n    width: 100%;\n`;\n\nexport const MovieInfoContainer = styled.div`\n    width: 60%;\n    margin-left: 30px;\n`;\n\nexport const MovieInfoTitle = styled.h1`\n    color: #000000;\n    font-size: 50px;\n    font-weight: 500px;\n`;\n\nexport const MovieInfoTitle2 = styled.h2`\n    color: #000000;\n    font-size: 40px;\n    font-weight: 400px;\n`;\nexport const MovieInfoText = styled.p`\n    font-size: 24px;\n    font-weight: 400px;\n `;\n\nexport const MovieInfoGenres = styled.ul`\n    font-size: 24px;\n    font-weight: 400px;\n `;\n\nexport const AdditionalInfoContainer = styled.div`\n    border-top: 1px solid #2a363b;\n    width: 100%;  \n`;\n\nexport const AdditionalTitle = styled.h4`\n    color: #000000;\n    font-size: 30px;\n    font-weight: 400px;\n`;\n\nexport const AdditionalInfoList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    list-style: disc;\n    margin-bottom: 24px;\n    border-bottom: 1px solid #2a363b;\n`;\n\nexport const AdditionalInfoLink = styled(NavLink)`\n    color: #000000;\n    font-size: 24px;\n    font-weight: 400px;\n    text-decoration: none;\n    &:hover,\n    &:focus {\n        color: #2196f3;\n        text-shadow: 0 0 10px rgb(63, 131, 209);\n    }\n`;\n\nexport const CastList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    margin-left: -20px;\n    margin-top: -20px;\n`;\n\nexport const CastListItem = styled.li`\n    flex-basis: calc((100% - 100px) / 5);\n    max-width: 180px;\n    margin-left: 100px;\n    margin-top: 20px;\n`;\n\nexport const ReviewsItemTitle = styled.h4`\n    font-size: 24px;\n    font-weight: 400px;\n`;\n\nexport const ReviewsText = styled.p`\n    font-size: 30px;\n    font-weight: 400px;\n    max-width: 60%;\n`;","import styled from \"styled-components\";\n\nexport const LoaderContainer = styled.div`\n    display: flex;\n    justify-content: center;\n`","import React from 'react';\nimport { Oval } from \"react-loader-spinner\";\nimport { LoaderContainer } from \"./Loader.styled\";\n\nexport default function Loader() {\n    return (\n        <LoaderContainer>\n            <Oval color=\"#3f51b5\" height=\"100px\" width=\"100px\" />\n        </LoaderContainer>\n   )};","import { FcSearch } from \"react-icons/fc\";\nimport { IconContext } from \"react-icons\";\nimport styled from \"styled-components\";\n\nconst IconContainer = styled.div`\nheight: 280px;\nwidth: 180px;\ndisplay: flex;\njustify-content: center;\nalign-items: flex-end;\nbackground-color: #ffffff;\n`\n\nconst ImagePlug = () => {\n\n    return (\n    <IconContext.Provider value={{ size: \"180px\" }}>\n     <IconContainer>\n      <FcSearch />\n     </IconContainer>\n    </IconContext.Provider>\n    )\n}\n\nexport default ImagePlug;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport toast from 'react-hot-toast';\nimport Loader from \"components/Loader/Loader\";\nimport { getMovieCast } from \"../services/moviesApi\";\nimport { CastList, CastListItem } from \"components/CardMovie/CardMovie.styled\";\nimport ImagePlug from \"components/ImagePlug\";\n\nexport function Cast() {\n    const { movieId } = useParams();\n    const [actors, setActors] = useState([]);\n    const [loading, setLoading] = useState(false);\n    \n    useEffect(() => {\n        async function fatchCast() {\n            setLoading(true);\n            try {\n                const results = await getMovieCast(movieId);\n                setActors([...results.cast] );\n            } catch (error) {\n                toast.error(\"We have no information about actors from this movie.\")\n            } finally {\n                setLoading(false);\n            }\n        }\n        fatchCast();\n        }, [movieId]);\n    \nreturn (\n    <>\n        {loading && <Loader/>}\n        {actors && (\n            <CastList>\n                {actors.map((actor) => \n                    <CastListItem key={actor.cast_id}>\n                        {actor.profile_path ? (\n                            <img src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`} alt={actor.name} />\n                            ) : ( <ImagePlug/>\n                        )}\n                        <h3>{actor.name}</h3>\n                        <p>Character: {actor.character}</p>\n                </CastListItem>\n                )}\n                </CastList>\n        )}\n    </>\n    );\n}","import axios from \"axios\"\nimport Notiflix from \"notiflix\";\nNotiflix.Notify.init({\n  width: \"280\",\n  position: \"center-top\",\n  distance: \"180px\",\n  opacity: 1,\n  timeout: 3000,\n  showOnlyTheLastOne: true,\n  clickToClose: true,\n  useIcon: false,\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_Key = \"e5081468dae293b7907b87f3cbb5b6c8\";\n\nexport async function getPopularFilms() {\n    try {\n        const response = await axios.get(`trending/all/day?api_key=${API_Key}`);\n        return response.data.results;\n    }\n    catch (error) {\n        Notiflix.Notify.init(\"Critical error\", error);\n        //failure\n    }\n}\n\nexport async function getMovieDetails(movieId) {\n    try {\n        const response = await axios.get(`movie/${movieId}?api_key=${API_Key}&language=en-US`);\n        return response.data;\n    }\n    catch (error) {\n        Notiflix.Notify.init(\"Critical error\", error);\n        //failure\n    }\n}\n\n\nexport async function getMovieCast(movieId) {\n    try {\n        const response = await axios.get(`movie/${movieId}/credits?api_key=${API_Key}&language=en-US`);\n        return response.data;\n    }\n    catch (error) {\n        Notiflix.Notify.init(\"Critical error\", error);\n        //failure\n    }\n}\n\nexport async function getReviews(movieId) {\n    try {\n        const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_Key}&language=en-US`);\n        return response.data;\n    }\n    catch (error) {\n        Notiflix.Notify.init(\"Critical error\", error);\n        //failure\n    }\n}\n\nexport async function getSerchMovies(searchMovies) {\n    try {\n        const response = await axios.get(`search/movie?api_key=${API_Key}&language=en-US&query=${searchMovies}`);\n        return response.data;\n    }\n    catch (error) {\n        Notiflix.Notify.init(\"Critical error\", error);\n        //failure\n    }\n}\n"],"names":["CardMovieContainer","styled","MovieImg","MovieInfoContainer","MovieInfoTitle","MovieInfoTitle2","MovieInfoText","MovieInfoGenres","AdditionalInfoContainer","AdditionalTitle","AdditionalInfoList","AdditionalInfoLink","NavLink","CastList","CastListItem","ReviewsItemTitle","ReviewsText","LoaderContainer","Loader","color","height","width","IconContainer","value","size","Cast","movieId","useParams","useState","actors","setActors","loading","setLoading","useEffect","getMovieCast","results","cast","toast","fatchCast","map","actor","profile_path","src","alt","name","character","cast_id","Notiflix","position","distance","opacity","timeout","showOnlyTheLastOne","clickToClose","useIcon","axios","API_Key","getPopularFilms","response","data","getMovieDetails","getReviews","getSerchMovies","searchMovies"],"sourceRoot":""}