{"version":3,"file":"static/js/736.adc4209c.chunk.js","mappings":"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","sources":["components/CardMovie/CardMovie.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/Reviews.jsx","services/moviesApi.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const CardMovieContainer = styled.div`\n    display: flex;\n    width: 1000px;\n    margin-bottom: 24px;\n\n`;\n \nexport const MovieImg = styled.img`\n    width: 100%;\n`;\n\nexport const MovieInfoContainer = styled.div`\n    width: 60%;\n    margin-left: 30px;\n`;\n\nexport const MovieInfoTitle = styled.h1`\n    color: #000000;\n    font-size: 50px;\n    font-weight: 500px;\n`;\n\nexport const MovieInfoTitle2 = styled.h2`\n    color: #000000;\n    font-size: 40px;\n    font-weight: 400px;\n`;\nexport const MovieInfoText = styled.p`\n    font-size: 24px;\n    font-weight: 400px;\n `;\n\nexport const MovieInfoGenres = styled.ul`\n    font-size: 24px;\n    font-weight: 400px;\n `;\n\nexport const AdditionalInfoContainer = styled.div`\n    border-top: 1px solid #2a363b;\n    width: 100%;  \n`;\n\nexport const AdditionalTitle = styled.h4`\n    color: #000000;\n    font-size: 30px;\n    font-weight: 400px;\n`;\n\nexport const AdditionalInfoList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    list-style: disc;\n    margin-bottom: 24px;\n    border-bottom: 1px solid #2a363b;\n`;\n\nexport const AdditionalInfoLink = styled(NavLink)`\n    color: #000000;\n    font-size: 24px;\n    font-weight: 400px;\n    text-decoration: none;\n    &:hover,\n    &:focus {\n        color: #2196f3;\n        text-shadow: 0 0 10px rgb(63, 131, 209);\n    }\n`;\n\nexport const CastList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    margin-left: -20px;\n    margin-top: -20px;\n`;\n\nexport const CastListItem = styled.li`\n    flex-basis: calc((100% - 100px) / 5);\n    max-width: 180px;\n    margin-left: 100px;\n    margin-top: 20px;\n`;\n\nexport const ReviewsItemTitle = styled.h4`\n    font-size: 24px;\n    font-weight: 400px;\n`;\n\nexport const ReviewsText = styled.p`\n    font-size: 30px;\n    font-weight: 400px;\n    max-width: 60%;\n`;","import styled from \"styled-components\";\n\nexport const LoaderContainer = styled.div`\n    display: flex;\n    justify-content: center;\n`","import React from 'react';\nimport { Oval } from \"react-loader-spinner\";\nimport { LoaderContainer } from \"./Loader.styled\";\n\nexport default function Loader() {\n    return (\n        <LoaderContainer>\n            <Oval color=\"#3f51b5\" height=\"100px\" width=\"100px\" />\n        </LoaderContainer>\n   )};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport Loader from \"components/Loader/Loader\";\n\nimport { getReviews } from \"../services/moviesApi\";\nimport { ReviewsItemTitle, ReviewsText} from \"components/CardMovie/CardMovie.styled\";\n\n\nexport function Reviews() {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [loading, setLoading] = useState(false);\n    \n    useEffect(() => {\n        async function fatchReviews() {\n            setLoading(true);\n            try {\n                const resReviews = await getReviews(movieId);\n                setReviews([...resReviews.results]);\n            } catch (error) {\n                console.log(error);\n            } finally {\n                setLoading(false);\n            }\n        }\n            \n        fatchReviews();\n    }, [movieId]);\n    \n    return (\n        <>\n            {loading && <Loader/>}\n            {reviews.length > 0  ? (\n                <ul>\n                {reviews.map((review) => \n                    <li key={review.id}>\n                        <ReviewsItemTitle>{review.author}</ReviewsItemTitle>\n                        <ReviewsText>{review.content}</ReviewsText>\n                </li>\n                )}\n                </ul>\n            ) :\n                <p>We don`t have any reviews for this movie.</p>}\n        </>\n    );\n}","import axios from \"axios\"\nimport Notiflix from \"notiflix\";\nNotiflix.Notify.init({\n  width: \"280\",\n  position: \"center-top\",\n  distance: \"180px\",\n  opacity: 1,\n  timeout: 3000,\n  showOnlyTheLastOne: true,\n  clickToClose: true,\n  useIcon: false,\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_Key = \"e5081468dae293b7907b87f3cbb5b6c8\";\n\nexport async function getPopularFilms() {\n    try {\n        const response = await axios.get(`trending/all/day?api_key=${API_Key}`);\n        return response.data.results;\n    }\n    catch (error) {\n        Notiflix.Notify.init(\"Critical error\", error);\n        //failure\n    }\n}\n\nexport async function getMovieDetails(movieId) {\n    try {\n        const response = await axios.get(`movie/${movieId}?api_key=${API_Key}&language=en-US`);\n        return response.data;\n    }\n    catch (error) {\n        Notiflix.Notify.init(\"Critical error\", error);\n        //failure\n    }\n}\n\n\nexport async function getMovieCast(movieId) {\n    try {\n        const response = await axios.get(`movie/${movieId}/credits?api_key=${API_Key}&language=en-US`);\n        return response.data;\n    }\n    catch (error) {\n        Notiflix.Notify.init(\"Critical error\", error);\n        //failure\n    }\n}\n\nexport async function getReviews(movieId) {\n    try {\n        const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_Key}&language=en-US`);\n        return response.data;\n    }\n    catch (error) {\n        Notiflix.Notify.init(\"Critical error\", error);\n        //failure\n    }\n}\n\nexport async function getSerchMovies(searchMovies) {\n    try {\n        const response = await axios.get(`search/movie?api_key=${API_Key}&language=en-US&query=${searchMovies}`);\n        return response.data;\n    }\n    catch (error) {\n        Notiflix.Notify.init(\"Critical error\", error);\n        //failure\n    }\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["CardMovieContainer","styled","MovieImg","MovieInfoContainer","MovieInfoTitle","MovieInfoTitle2","MovieInfoText","MovieInfoGenres","AdditionalInfoContainer","AdditionalTitle","AdditionalInfoList","AdditionalInfoLink","NavLink","CastList","CastListItem","ReviewsItemTitle","ReviewsText","LoaderContainer","Loader","color","height","width","Reviews","movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","getReviews","resReviews","results","console","log","fatchReviews","length","map","review","author","content","id","Notiflix","position","distance","opacity","timeout","showOnlyTheLastOne","clickToClose","useIcon","axios","API_Key","getPopularFilms","response","data","getMovieDetails","getMovieCast","getSerchMovies","searchMovies","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}